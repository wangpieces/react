受控组件：
  class NameForm extends React.Component{
      constructor(props){
          super(props);
          this.handleChange = this.handleChange.bind(this);
          this.handleSubmit = this.handleSubmit.bind(this);
          this.state = {value : ''};
      }
      
      handleChange(event){
          this.setState({value : event.target.value});
      }
      
      handleSubmit(event){
          alert('Yout input value:'+event.target.value);
          event.preventDefault();
      }
      render(){
        return(
            <form onSubmit={this.handleSubmit}>
                <label>name:<input value={this.state.value} onChange={this.handleChange} /></label>
                <input type="submit" value="submit"/>
            </form>
        );
      }
  }
  
  textArea标签：
    在html标签中textarea的用法是<textarea></textarea>
    而在react中的用法和input的用法相似，使用value属性
    render(){
        return(
            <form>
                <label>name:<textarea value={this.state.value} onChange={this.handleChange}/></label>
            </form>
            <input type="submit" value="submit"/>
        );
    }
    
   select标签：
   在html中select用法如下
   <select>
      option value="grapefruit">Grapefruit</option>
      <option value="lime">Lime</option>
      <option selected value="coconut">Coconut</option>
      <option value="mango">Mango</option>
   </select>
   在html选项中选择默认选项是使用selected属性的，而在react中是使用value属性，且这个value属性是作用在根元素select上的，
   这对于受控组件来说将会更加的方便，因为只需要修改一个地方即可。
   <select value={this.state.value} onChange={this.handleChange}>
      option value="grapefruit">Grapefruit</option>
      <option value="lime">Lime</option>
      <option value="coconut">Coconut</option>
      <option value="mango">Mango</option>
   </select>
   
   这样一来，input,textarea,select使用起来将会非常的相似了。
   
   处理多个input：
  当您需要处理多个受控input元素时，您可以在每个元素添加一个name属性，让处理函数根据event.target.name值选择该做什么。
  class Reservation extends React.Component{
      constrouctor(props){
          super(props);
          this.state = {isGoging:true,numberOfGuests:2}
          this.handleInputChange = this.handleInputChange.bind(this);
      }
      
      handleInputChange(event){
          const target = event.target;
          const value = target.type == 'checkbox'? target.checked : target.value;
          const name = event.name;
          this.setState({
              [name] : value
          });
      }
      
      render(){
          return(
              <form>
                  <label>
                      Is Going:<input name="isGoging" type="checkbox" checked={this.state.isGoging} onChange={this.handleInputChange}/>
                  </label>
                  <br/>
                  <label>
                    Number of guests:<input type="number" value={this.state.numberOfGuests} onChange={this.handleInputChange} />
                  </label>
              </form>
          )
      }
      
  }
 ReactDOM.render(
    <Reservation />,
    document.getElementById('root')
);
  

  
  
